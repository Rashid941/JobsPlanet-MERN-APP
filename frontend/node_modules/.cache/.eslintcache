[{"C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\index.js":"1","C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\App.js":"2","C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\serviceWorker.js":"3","C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\store.js":"4","C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\utils\\setAuthToken.js":"5","C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\actions\\authActions.js":"6","C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\components\\Common\\Login.js":"7","C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\components\\templates\\Navbar.js":"8","C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\components\\Common\\Register.js":"9","C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\components\\Common\\Home.js":"10","C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\components\\Users\\UsersList.js":"11","C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\components\\private-route\\PrivateRoute.js":"12","C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\components\\Users\\Dashboard.js":"13","C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\components\\Users\\EditProfile.js":"14","C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\components\\Users\\Profile.js":"15","C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\components\\Applicant\\AddEducation.js":"16","C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\components\\Applicant\\JobsList.js":"17","C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\components\\Applicant\\MyApplications.js":"18","C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\components\\Recruiter\\Employees.js":"19","C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\components\\Recruiter\\CreateJob.js":"20","C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\components\\Recruiter\\MyActiveJobs.js":"21","C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\components\\Recruiter\\AppList.js":"22","C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\actions\\types.js":"23","C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\reducers\\index.js":"24","C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\reducers\\authReducer.js":"25","C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\reducers\\errorReducer.js":"26"},{"size":452,"mtime":1698654259266,"results":"27","hashOfConfig":"28"},{"size":3142,"mtime":1698654259245,"results":"29","hashOfConfig":"28"},{"size":5009,"mtime":1698774355992,"results":"30","hashOfConfig":"28"},{"size":410,"mtime":1698774355993,"results":"31","hashOfConfig":"28"},{"size":350,"mtime":1698654259272,"results":"32","hashOfConfig":"28"},{"size":1912,"mtime":1698654259247,"results":"33","hashOfConfig":"28"},{"size":5336,"mtime":1698774356224,"results":"34","hashOfConfig":"28"},{"size":865,"mtime":1698654259265,"results":"35","hashOfConfig":"28"},{"size":9283,"mtime":1698774356240,"results":"36","hashOfConfig":"28"},{"size":1473,"mtime":1698774356219,"results":"37","hashOfConfig":"28"},{"size":3346,"mtime":1698774356209,"results":"38","hashOfConfig":"28"},{"size":612,"mtime":1698774356213,"results":"39","hashOfConfig":"28"},{"size":3871,"mtime":1698774356195,"results":"40","hashOfConfig":"28"},{"size":10385,"mtime":1698774356199,"results":"41","hashOfConfig":"28"},{"size":14704,"mtime":1698774356202,"results":"42","hashOfConfig":"28"},{"size":5715,"mtime":1698774356261,"results":"43","hashOfConfig":"28"},{"size":24885,"mtime":1698774356245,"results":"44","hashOfConfig":"28"},{"size":8769,"mtime":1698774356247,"results":"45","hashOfConfig":"28"},{"size":15390,"mtime":1698774356082,"results":"46","hashOfConfig":"28"},{"size":12464,"mtime":1698774356081,"results":"47","hashOfConfig":"28"},{"size":18932,"mtime":1698774370128,"results":"48","hashOfConfig":"28"},{"size":22535,"mtime":1698774356077,"results":"49","hashOfConfig":"28"},{"size":135,"mtime":1698654259248,"results":"50","hashOfConfig":"28"},{"size":209,"mtime":1698654259268,"results":"51","hashOfConfig":"28"},{"size":621,"mtime":1698774356250,"results":"52","hashOfConfig":"28"},{"size":261,"mtime":1698774356252,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"jxwjnv",{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"57"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"57"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"57"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"57"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"57"},"C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\index.js",[],[],["138"],"C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\App.js",[],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\serviceWorker.js",[],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\store.js",[],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\utils\\setAuthToken.js",[],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\actions\\authActions.js",[],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\components\\Common\\Login.js",[],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\components\\templates\\Navbar.js",[],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\components\\Common\\Register.js",["139"],[],"import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n    constructor() {\n        super();\n        this.state = {\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            password2: \"\",\n            role: \"\",\n            phone_number: NaN,\n            skills: [],\n            errors: {}\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(event) {\n        this.setState({role: event.target.value});\n    }\n    componentDidMount() {\n        // If logged in and user navigates to Register page, should redirect them to dashboard\n        if (this.props.auth.isAuthenticated) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n            errors: nextProps.errors\n            });\n        }\n    }\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n    onSubmit = e => {\n        e.preventDefault();\n        console.log(this.state.skills);\n        if(this.state.role === \"applicant\" && this.state.skills !== \"\" && this.state.skills.length !== 0)\n            this.state.skills = this.state.skills.split(',');\n        const newUser = {\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password,\n            password2: this.state.password2,\n            role: this.state.role,\n            phone_number: this.state.phone_number,\n            skills: this.state.skills\n        };\n        this.props.registerUser(newUser, this.props.history);\n        console.log(newUser);\n    };\n    render() {\n        const { errors } = this.state;\n        const userRole = this.state.role;\n        let RoleForm;\n        if(userRole === 'applicant') {\n            RoleForm = \n            <div>\n                <label htmlFor=\"skills\">Skills (comma-separated):</label><br></br>\n                <input\n                    onChange={this.onChange}\n                    value={this.state.skills}\n                    placeholder=\"Enter skills\"\n                    id=\"skills\"\n                    type=\"text\"\n                />\n            </div>\n        }\n        else if(userRole === 'recruiter') {\n            RoleForm = \n            <div>\n                <label htmlFor=\"phone_number\">Phone no.</label><br></br>\n                <input\n                    onChange={this.onChange}\n                    value={this.state.phone_number}\n                    id=\"phone_number\"\n                    type=\"number\"\n                />\n            </div>\n        }\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col s8 offset-s2\">\n                    <Link to=\"/\" className=\"btn-flat waves-effect\">\n                        <i className=\"material-icons left\"><b>keyboard_backspace</b></i>\n                    </Link>\n                    <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                        <h4>\n                        <b>Register</b>\n                        </h4>\n                        <p className=\"grey-text text-darken-1\">\n                        Already have an account? <Link to=\"/login\">Log in</Link>\n                        </p>\n                    </div>\n                        <form noValidate onSubmit={this.onSubmit}>\n                            <div className=\"input-field col s12\">\n                                <label htmlFor=\"name\">Role</label><br></br>\n                                <select \n                                    value={this.state.role} \n                                    onChange={this.handleChange}\n                                    error={errors.role}\n                                    id=\"role\"\n                                    className={classnames(\"\", {\n                                        invalid: errors.role\n                                        })}\n                                >\n                                    <option value=\"\">Select role</option>\n                                    <option value=\"applicant\">Applicant</option>\n                                    <option value=\"recruiter\">Recruiter</option>\n                                </select>\n                                <span className=\"red-text\">{errors.role}</span>\n                            </div> \n                            <div className=\"input-field col s12\">\n                                <label htmlFor=\"name\">Name</label><br></br>\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.name}\n                                    error={errors.name}\n                                    id=\"name\"\n                                    type=\"text\"\n                                    className={classnames(\"\", {\n                                        invalid: errors.name\n                                        })}\n                                />\n                                <span className=\"red-text\">{errors.name}</span>\n                            </div>\n                            <div className=\"input-field col s12\">\n                                <label htmlFor=\"email\">Email</label><br></br>\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.email}\n                                    error={errors.email}\n                                    id=\"email\"\n                                    type=\"email\"\n                                    className={classnames(\"\", {\n                                        invalid: errors.email\n                                    })}\n                                />\n                                <span className=\"red-text\">{errors.email}</span>\n                            </div>\n                            <div className=\"input-field col s12\">\n                                <label htmlFor=\"password\">Password</label><br></br>\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.password}\n                                    error={errors.password}\n                                    id=\"password\"\n                                    type=\"password\"\n                                    className={classnames(\"\", {\n                                        invalid: errors.password\n                                    })}\n                                />\n                                <span className=\"red-text\">{errors.password}</span>\n                            </div>\n                            <div className=\"input-field col s12\">\n                                <label htmlFor=\"password2\">Confirm Password</label><br></br>\n                                <input\n                                    onChange={this.onChange}\n                                    value={this.state.password2}\n                                    error={errors.password2}\n                                    id=\"password2\"\n                                    type=\"password\"\n                                    className={classnames(\"\", {\n                                        invalid: errors.password2\n                                    })}\n                                />\n                                <span className=\"red-text\">{errors.password2}</span>\n                            </div>\n                            <hr></hr>\n                            <div className=\"input-field col s12\">\n                                {RoleForm}\n                            </div>\n                            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                                <button\n                                    style={{\n                                    width: \"150px\",\n                                    borderRadius: \"3px\",\n                                    letterSpacing: \"1.5px\",\n                                    marginTop: \"1rem\"\n                                    }}\n                                    type=\"submit\"\n                                    className=\"btn btn-primary btn-large waves-effect waves-light hoverable blue accent-3\"\n                                >\n                                    Sign up\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nRegister.propTypes = {\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(\n    mapStateToProps,\n    { registerUser }\n)(withRouter(Register));","C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\components\\Common\\Home.js",[],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\components\\Users\\UsersList.js",[],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\components\\private-route\\PrivateRoute.js",[],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\components\\Users\\Dashboard.js",[],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\components\\Users\\EditProfile.js",[],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\components\\Users\\Profile.js",["140","141","142","143","144"],[],"import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nclass Profile extends Component {\r\n    onLogoutClick = e => {\r\n        e.preventDefault();\r\n        this.props.logoutUser();\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = \r\n        {\r\n            userdetails: [], \r\n            showform: false,\r\n            editing: \"\",\r\n            school: \"\",\r\n            degree: \"\",\r\n            startdate: new Date(),\r\n            file: null\r\n            // enddate: new Date(),\r\n        };\r\n        this.delEducation = this.delEducation.bind(this);\r\n        this.editEducation = this.editEducation.bind(this);\r\n        this.editEducationSubmit = this.editEducationSubmit.bind(this);\r\n        this.onBack = this.onBack.bind(this);\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { user } = this.props.auth;\r\n        axios.get('http://localhost:4000/user/'+ user.id)\r\n             .then(response => {\r\n                 this.setState({userdetails: response.data});\r\n             })\r\n             .catch(function(error) {\r\n                 console.log(error);\r\n             })\r\n    }\r\n\r\n    delEducation(ed) {\r\n        const { user } = this.props.auth;\r\n        const idToRemove = ed._id;\r\n        this.state.userdetails.education = this.state.userdetails.education.filter((item) => item._id !== idToRemove);\r\n        axios\r\n            .put('http://localhost:4000/user/edit_profile/' + user.id, this.state.userdetails)\r\n            .then(response => {\r\n                console.log(this.state.userdetails);\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            })\r\n        // to refresh\r\n        window.location.reload();\r\n    }\r\n\r\n    editEducation(ed) {\r\n        let show = !this.state.showform;\r\n        this.setState({showform: show});\r\n        let editid = ed._id;\r\n        this.setState({editing: editid});\r\n        console.log(this.state.showform);\r\n        this.setState({ school: ed.school });\r\n        this.setState({ degree: ed.degree });\r\n        if(ed.startdate)\r\n        {\r\n            ed.startdate = ed.startdate.toString();\r\n            ed.startdate = ed.startdate.substring(0,10);\r\n            this.setState({ startdate: ed.startdate });\r\n        }\r\n        if(ed.enddate)\r\n        {\r\n            ed.enddate = ed.enddate.toString();\r\n            ed.enddate = ed.enddate.substring(0,10);\r\n            this.setState({ enddate: ed.enddate });\r\n        }\r\n        \r\n        // to refresh\r\n        // this.props.history.push('/profile');\r\n    }\r\n\r\n    onBack() {\r\n        let show = !this.state.showform;\r\n        this.setState({ showform: show});\r\n        this.setState({ editing: \"\" });\r\n        \r\n        // to refresh\r\n        window.location.reload();\r\n    }\r\n\r\n    editEducationSubmit(ed) {\r\n        const { user } = this.props.auth;\r\n        const idToChange = ed._id;\r\n        this.setState({ editing: \"\" });\r\n        const ind = this.state.userdetails.education.findIndex(x => x._id === idToChange)\r\n        if(this.state.school !== \"\")\r\n            this.state.userdetails.education[ind].school = this.state.school;\r\n        if(this.state.degree !== \"\")\r\n            this.state.userdetails.education[ind].degree = this.state.degree;\r\n        this.state.userdetails.education[ind].startdate = this.state.startdate;\r\n        if(this.state.enddate && new Date(this.state.enddate) <= new Date(this.state.startdate))\r\n        {\r\n            alert(\"End date ahould be after start date.\");\r\n        }\r\n        else {\r\n            this.state.userdetails.education[ind].enddate = this.state.enddate;\r\n            axios\r\n                .put('http://localhost:4000/user/edit_profile/' + user.id, this.state.userdetails)\r\n                .then(response => {\r\n                    console.log(this.state.userdetails);\r\n                })\r\n                .catch(function(error) {\r\n                    console.log(error);\r\n                })\r\n            // to refresh\r\n        }\r\n        let show = !this.state.showform;\r\n        this.setState({ showform: show});\r\n        // window.location.reload();\r\n    }\r\n\r\n    render() {\r\n        const user = this.state.userdetails;\r\n        const userRole = user.role;\r\n        let UserDetails;\r\n        if(userRole === 'applicant') {\r\n            UserDetails = \r\n            <div>\r\n                 <ul>\r\n                    {/* <li>DP: {user.profile_image}</li> */}\r\n                    <li>Email: {user.email}</li>\r\n                    <li>Skills: \r\n                        <ul>\r\n                            {user.skills.map(skill => (\r\n                                <li>{skill}</li>\r\n                            ))}\r\n                        </ul>\r\n                    </li>\r\n                    {/* <li>Resume: {user.resume}</li> */}\r\n                </ul>\r\n                <hr></hr>\r\n                <ul>\r\n                    <li>Education:\r\n                        <Tooltip title=\"Add Education\" aria-label=\"added\">\r\n                            <Link style={{ color: '#009900', weight: 'bold' }} to=\"/addeducation\"><i className=\"material-icons\"><h2> add</h2></i></Link>\r\n                        </Tooltip>\r\n                        <ul>\r\n                            {user.education.map(ed => (\r\n                                <li>\r\n                                    <ul>\r\n                                        <li>School: {ed.school}</li>\r\n                                        <li>Degree: {ed.degree}</li>\r\n                                        <li>Start date: {ed.startdate ? ed.startdate.toString().substring(0, 10): \"NA\"}</li>\r\n                                        <li>End date: {ed.enddate ? ed.enddate.toString().substring(0, 10):\"NA\"}</li>\r\n                                    </ul>\r\n                                    \r\n                                    <div>\r\n                                        { !this.state.showform || ed._id !== this.state.editing? \r\n                                            <div>\r\n                                                <Tooltip title=\"Delete Above Education\" aria-label=\"delete\">\r\n                                                <button\r\n                                                style={{\r\n                                                    color: \"#FF0000\",\r\n                                                    }}\r\n                                                    className=\"btn btn-sm waves-effect waves-light hoverable blue accent-3\" \r\n                                                    onClick={() => this.delEducation(ed)}>\r\n                                                    <i className=\"material-icons\">delete</i>\r\n                                                </button>\r\n                                                </Tooltip>\r\n                                                <Tooltip title=\"Edit Above Education\" aria-label=\"edit\">\r\n                                                <button\r\n                                                    style={{\r\n                                                    color: \"#0000FF\",\r\n                                                    }}\r\n                                                    className=\"btn btn-sm waves-effect waves-light hoverable blue accent-3\" \r\n                                                    onClick={() => this.editEducation(ed)}>\r\n                                                    <i className=\"material-icons\">edit</i>\r\n                                                </button>\r\n                                                </Tooltip>\r\n                                            </div>\r\n                                        : \r\n                                            <div>\r\n                                                <br></br>\r\n                                                <form noValidate onSubmit={this.onSubmit}>\r\n                                                    <div className=\"input-field col s12\">\r\n                                                        <label htmlFor=\"school\">School</label><br></br>\r\n                                                        <input\r\n                                                            onChange={this.onChange}\r\n                                                            value={this.state.school}\r\n                                                            id=\"school\"\r\n                                                            type=\"text\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"input-field col s12\">\r\n                                                        <label htmlFor=\"degree\">Degree</label><br></br>\r\n                                                        <input\r\n                                                            onChange={this.onChange}\r\n                                                            value={this.state.degree}\r\n                                                            id=\"degree\"\r\n                                                            type=\"text\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"input-field col s12\">\r\n                                                        <label htmlFor=\"startdate\">Start Date</label><br></br>\r\n                                                        <input\r\n                                                            onChange={this.onChange}\r\n                                                            value={this.state.startdate}\r\n                                                            id=\"startdate\"\r\n                                                            type=\"date\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"input-field col s12\">\r\n                                                        <label htmlFor=\"enddate\">End Date</label><br></br>\r\n                                                        <input\r\n                                                            onChange={this.onChange}\r\n                                                            value={this.state.enddate}\r\n                                                            id=\"enddate\"\r\n                                                            type=\"date\"\r\n                                                        />\r\n                                                    </div>\r\n                                                    <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                                                    <button\r\n                                                    style={{\r\n                                                        color: \"#0000FF\",\r\n                                                        }}\r\n                                                        className=\"btn btn-sm waves-effect waves-light hoverable blue accent-3\" \r\n                                                        onClick={() => this.onBack()}>\r\n                                                        <b>Back</b>\r\n                                                    </button>\r\n                                                    <button\r\n                                                    style={{\r\n                                                        color: \"#009900\",\r\n                                                        }}\r\n                                                        className=\"btn btn-sm waves-effect waves-light hoverable blue accent-3\" \r\n                                                        onClick={() => this.editEducationSubmit(ed)}>\r\n                                                        <b>Save</b>\r\n                                                    </button>\r\n                                                    </div>\r\n                                                </form>\r\n                                            </div> \r\n                                            \r\n                                         }\r\n                                    </div>\r\n                                    <br></br>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        }\r\n        else if(userRole === 'recruiter') {\r\n            UserDetails = \r\n            <ul>\r\n                <li>Bio: {user.bio}</li>\r\n                <li>Email: {user.email}</li>\r\n                <li>Contact No.: {user.phone_number}</li>\r\n            </ul>\r\n        }\r\n        return (\r\n            <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 center-align\">\r\n                    <Card style={{ width: '100%' }}>\r\n                        <Card.Header>\r\n                            <Button variant=\"light\"><h4>My Profile</h4></Button>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Title>\r\n                                <p>\r\n                                    <b>{user.name}: </b>\r\n                                    <Tooltip title=\"Edit Profile\" aria-label=\"edit\">\r\n                                        <Link to=\"/editprofile\"><i className=\"material-icons\"> edit</i></Link>\r\n                                    </Tooltip>\r\n                                </p>\r\n                            </Card.Title>\r\n                            <Card.Text>\r\n                                {UserDetails}\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProfile.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\nexport default connect(\r\n    mapStateToProps,\r\n)(Profile);","C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\components\\Applicant\\AddEducation.js",[],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\components\\Applicant\\JobsList.js",[],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\components\\Applicant\\MyApplications.js",[],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\components\\Recruiter\\Employees.js",[],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\components\\Recruiter\\CreateJob.js",[],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\components\\Recruiter\\MyActiveJobs.js",[],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\components\\Recruiter\\AppList.js",["145"],[],"import React, {Component} from 'react';\nimport axios from 'axios';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nimport PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\nimport { connect } from \"react-redux\";\n\n\nclass AppList extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            userdetails: [],\n            users: [],\n            jobs: [],\n            applications: [],\n            rating: 0,\n            sortbyname:true,\n            sortbydateofapply:true,\n            sortbyrating:true\n        };\n        this.renderNameIcon = this.renderNameIcon.bind(this);\n        this.renderDateOfApplyIcon = this.renderDateOfApplyIcon.bind(this);\n        this.renderRatingIcon = this.renderRatingIcon.bind(this);\n        this.sortByName = this.sortByName.bind(this);\n        this.sortByDateOfApply = this.sortByDateOfApply.bind(this);\n        this.sortByRating = this.sortByRating.bind(this);\n        this.accept = this.accept.bind(this);\n    }\n\n    onLogoutClick = e => {\n        e.preventDefault();\n        this.props.logoutUser();\n    };\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n    };\n\n    componentDidMount() {\n        const { user } = this.props.auth;\n        axios.get('http://localhost:4000/user/'+ user.id)\n                .then(response => {\n                    this.setState({userdetails: response.data});\n                })\n                .catch(function(error) {\n                    console.log(error);\n                })\n        axios.get('http://localhost:4000/job/get_jobs')\n            .then(response => {\n                this.setState({jobs: response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n        axios.get('http://localhost:4000/user/')\n            .then(response => {\n                this.setState({users: response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n        axios.get('http://localhost:4000/application/get_applications')\n            .then(response => {\n                this.setState({applications: response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({\n            errors: nextProps.errors\n            });\n        }\n    }\n\n    getjob(jobId)\n    {\n        let job = this.state.jobs.filter(item => item._id === jobId)[0];\n        return job;\n    }\n\n    getapplicant(applicantId)\n    {\n        let applicant = this.state.users.filter(item => item._id === applicantId)[0];\n        return applicant;\n    }\n\n    sortByName(){\n        var array = this.state.applications;\n        var flag = this.state.sortbyname;\n        let uusers = this.state.users;\n        function getapplicant(applicantId)\n        {\n            let applicant = uusers.filter(item => item._id === applicantId)[0];\n            return applicant;\n        }\n        array.sort(function(a, b) {\n            console.log(a.applicantId);\n            let aapp = getapplicant(a.applicantId);\n            let bapp = getapplicant(b.applicantId);\n            if(aapp.name !== undefined && bapp.name !== undefined){\n                return (1 - +flag*2) * aapp.name.localeCompare(bapp.name);\n            }\n            else{\n                return 1;\n            }\n          });\n        this.setState({\n            applications:array,\n            sortbyname:!this.state.sortbyname,\n        })\n    }\n\n    sortByDateOfApply(){\n        var array = this.state.applications;\n        var flag = this.state.sortbydateofapply;\n        array.sort(function(a, b) {\n            if(a.dateOfApply !== undefined && b.dateOfApply !== undefined){\n                return (1 - +flag*2) * (new Date(a.dateOfApply) - new Date(b.dateOfApply));\n            }\n            else{\n                return 1;\n            }\n          });\n        this.setState({\n            applications:array,\n            sortbydateofapply:!this.state.sortbydateofapply,\n        })\n    }\n\n    sortByRating(){\n        var array = this.state.applications;\n        var flag = this.state.sortbyrating;\n        let uusers = this.state.users;\n        function getapplicant(applicantId)\n        {\n            let applicant = uusers.filter(item => item._id === applicantId)[0];\n            return applicant;\n        }\n        array.sort(function(a, b) {\n            let aapp = getapplicant(a.applicantId);\n            let bapp = getapplicant(b.applicantId);\n            if(aapp.rating !== undefined && bapp.rating !== undefined){\n                return (1 - +flag*2) * (+aapp.rating - +bapp.rating);\n            }\n            else{\n                return 1;\n            }\n          });\n        this.setState({\n            applications:array,\n            sortbyrating:!this.state.sortbyrating,\n        })\n    }\n\n    renderNameIcon(){\n        if(this.state.sortbyname){\n            return(\n                <ArrowDownwardIcon/>\n            )\n        }\n        else{\n            return(\n                <ArrowUpwardIcon/>\n            )            \n        }\n    }\n\n    renderDateOfApplyIcon(){\n        if(this.state.sortbydateofapply){\n            return(\n                <ArrowDownwardIcon/>\n            )\n        }\n        else{\n            return(\n                <ArrowUpwardIcon/>\n            )            \n        }\n    }\n\n    renderRatingIcon(){\n        if(this.state.sortbyrating){\n            return(\n                <ArrowDownwardIcon/>\n            )\n        }\n        else{\n            return(\n                <ArrowUpwardIcon/>\n            )            \n        }\n    }\n\n    shortlist(application) {\n        const editApplication = {\n            status: \"Shortlisted\"\n        };\n\n        axios\n            .put('http://localhost:4000/application/edit_application/' + application._id, editApplication)\n            .then(response => {\n                console.log(editApplication);\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n            window.location.reload();\n    }\n\n    accept(application) {\n        let job = this.getjob(application.jobId);\n        if(job.numpos === job.posmax)\n        {\n            alert(\"All positions are filled!\");\n            return;\n        }\n        else if(job.numpos === job.posmax - 1)\n        {\n            this.state.applications.filter(item => item.applicantId !== application.applicantId && item.jobId === application.jobId && item.status !== \"Deleted\" && item.status !== \"Accepted\").forEach(\n                function(appli)\n                {\n                    // let temp = job;\n                    const tempAppli = {\n                        status: \"Rejected\"\n                    }\n                    // let newNumApp = +temp.numapp - 1;\n                    // if(newNumApp < 0) newNumApp = 0;\n                    // const tempJob = {\n                    //     numapp: newNumApp\n                    // }\n                    axios\n                        .put('http://localhost:4000/application/edit_application/' + appli._id, tempAppli)\n                        .then(response => {\n                            console.log(tempAppli);\n                        })\n                        .catch(function(error) {\n                            console.log(error);\n                        })\n                    // axios\n                    //     .put('http://localhost:4000/job/edit_job/' + temp._id, tempJob)\n                    //     .then(response => {\n                    //         console.log(tempJob);\n                    //     })\n                    //     .catch(function(error) {\n                    //         console.log(error);\n                    //     })\n                })\n        }\n        let nnumpos = +job.numpos + 1;\n\n        const editApplicant = {\n            working: true,\n            numapp: 0\n        };\n\n        const editJob = {\n            numpos: nnumpos\n        };\n\n        const editApplication = {\n            status: \"Accepted\",\n            doj: new Date()\n        };\n\n        axios\n            .put('http://localhost:4000/job/edit_job/' + job._id, editJob)\n            .then(response => {\n                console.log(editJob);\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n\n        axios\n            .put('http://localhost:4000/application/edit_application/' + application._id, editApplication)\n            .then(response => {\n                console.log(editApplication);\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n        \n        axios\n            .put('http://localhost:4000/user/edit_profile/' + application.applicantId, editApplicant)\n            .then(response => {\n                console.log(editApplicant);\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n        let alljobs = this.state.jobs;\n        this.state.applications.filter(item => item.applicantId === application.applicantId && item._id !== application._id && item.status !== \"Deleted\").forEach(\n            function(appli)\n            {\n                // let appliJob = alljobs.filter(item => item._id === appli.jobId)[0];\n                const editAppli = {\n                    status: \"Rejected\"\n                }\n                // let napp = +appliJob.numapp - 1;\n                // if(napp < 0) napp = 0;\n                // const editAppliJob = {\n                //     numapp: napp\n                // }\n                axios\n                    .put('http://localhost:4000/application/edit_application/' + appli._id, editAppli)\n                    .then(response => {\n                        console.log(editAppli);\n                    })\n                    .catch(function(error) {\n                        console.log(error);\n                    })\n                // axios\n                //     .put('http://localhost:4000/job/edit_job/' + appliJob._id, editAppliJob)\n                //     .then(response => {\n                //         console.log(editAppliJob);\n                //     })\n                //     .catch(function(error) {\n                //         console.log(error);\n                //     })\n            })\n\n        this.props.history.push('/appList');\n        this.props.history.push('/');\n        this.props.history.goBack();\n    }\n\n    reject(application) {\n        // const { user } = this.props.auth;\n        // let job = this.getjob(application.jobId);\n        let applicant = this.getapplicant(application.applicantId);\n        // let job = this.getjob(application.jobId);\n        let nnumapp = +applicant.numapp - 1;\n        // let jnumapp = +job.numapp - 1;\n\n        if(nnumapp < 0) nnumapp = 0;\n        // if(jnumapp < 0) jnumapp = 0;\n\n        const editApplicant = {\n            numapp: nnumapp\n        };\n\n        const editApplication = {\n            status: \"Rejected\"\n        };\n\n        // const editJob = {\n        //     numapp: jnumapp\n        // };\n\n        axios\n            .put('http://localhost:4000/application/edit_application/' + application._id, editApplication)\n            .then(response => {\n                console.log(editApplication);\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n\n        // axios\n        //     .put('http://localhost:4000/job/edit_job/' + job._id, editJob)\n        //     .then(response => {\n        //         console.log(editJob);\n        //     })\n        //     .catch(function(error) {\n        //         console.log(error);\n        //     })\n        \n        axios\n            .put('http://localhost:4000/user/edit_profile/' + application.applicantId, editApplicant)\n            .then(response => {\n                console.log(editApplicant);\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n\n        this.props.history.push('/appList');\n        this.props.history.push('/appList');\n        this.props.history.goBack();;\n    }\n\n    render() \n    {\n        const { user } = this.props.auth;\n        const userRole = this.state.userdetails.role;\n        let Applications;\n        if(userRole === \"recruiter\") {\n            Applications =\n            <div>\n                <Grid>\n                <Grid item xs={12} md={12} lg={12}>\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\n                        <ListItem text>\n                            <h3>Applications</h3>\n                        </ListItem>\n                    </List>\n                </Grid>\n                </Grid>\n                <Grid>\n                    <Grid item xs={12} md={12} lg={12}>\n                        {/* <Paper> */}\n                            <Table>\n                                <TableHead>\n                                    <TableRow>\n                                            <TableCell>Title</TableCell>\n                                            <TableCell>Applicant <Button onClick={this.sortByName}>{this.renderNameIcon()}</Button></TableCell>\n                                            <TableCell>Appl. Rating <Button onClick={this.sortByRating}>{this.renderRatingIcon()}</Button></TableCell>\n                                            <TableCell>Appl. Skills</TableCell>\n                                            <TableCell><ul><li>Education</li></ul></TableCell>\n                                            <TableCell>SOP</TableCell>\n                                            <TableCell>Status</TableCell>\n                                            <TableCell>Date of Application <Button onClick={this.sortByDateOfApply}>{this.renderDateOfApplyIcon()}</Button></TableCell>\n                                            <TableCell></TableCell>\n                                            <TableCell></TableCell>\n                                            <TableCell></TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.state.applications.filter(item => item.status !== \"Rejected\" && item.recruiterId === user.id && item.jobId === this.props.location.state).map((application,ind) => (\n                                        <TableRow key={ind}>\n                                            <TableCell>{application.title}</TableCell>\n                                            {this.state.users.filter(item => item._id === application.applicantId).map((applicant,innd) => (\n                                                <TableCell key={innd}>{applicant.name}</TableCell>\n                                            ))}\n                                            {this.state.users.filter(item => item._id === application.applicantId).map((applicant,innd) => (\n                                                <TableCell key={innd}>{applicant.rating ? applicant.rating.toFixed(1): \"\"}<i className=\"material-icons\"><h6> star</h6></i></TableCell>\n                                            ))}\n                                            {this.state.users.filter(item => item._id === application.applicantId).map((applicant,innd) => (\n                                                <TableCell key={innd}>{applicant.skills.join(\", \")}</TableCell>\n                                            ))}\n                                            {this.state.users.filter(item => item._id === application.applicantId).map((applicant,innd) => (\n                                                <TableCell key={innd}>\n                                                    {\n                                                        applicant.education.map(ed => (\n                                                            <ul>\n                                                                <li>School: {ed.school}</li>\n                                                                <li>Degree: {ed.degree}</li>\n                                                                <li>Start date: {ed.startdate ? ed.startdate.toString().substring(0, 10): \"NA\"}</li>\n                                                                <li>End date: {ed.enddate ? ed.enddate.toString().substring(0, 10):\"NA\"}</li>\n                                                            </ul>\n                                                        ))\n                                                    }\n                                                </TableCell>\n                                            ))}\n                                            <TableCell>{application.sop}</TableCell>\n                                            <TableCell>{application.status}</TableCell>\n                                            <TableCell>{application.dateOfApplication.substring(0, 10)}</TableCell>\n                                           \n                                            {application.status === \"Applied\"?\n                                            \n                                            <TableCell>\n                                                <Tooltip title=\"Shortlist Candidate\" aria-label=\"apply\">\n                                                    <button\n                                                        className=\"btn btn-primary btn-sm waves-effect waves-light hoverable blue accent-3\" \n                                                        onClick={() => this.shortlist(application)}>\n                                                        Shortlist\n                                                    </button> \n                                                </Tooltip>                                            \n                                            </TableCell>\n\n                                            :\n\n                                            <div></div>\n\n                                            }\n                                            {application.status === \"Shortlisted\"?\n                                            \n                                            <TableCell>\n                                                <Tooltip title=\"Accept Candidate\" aria-label=\"apply\">\n                                                    <button\n                                                        className=\"btn btn-success btn-sm waves-effect waves-light hoverable blue accent-3\" \n                                                        onClick={() => this.accept(application)}>\n                                                        Accept\n                                                    </button> \n                                                </Tooltip>                                            \n                                            </TableCell>\n\n                                            :\n\n                                            <div></div>\n\n                                            }\n                                            {application.status === \"Accepted\"?\n                                            \n                                            <TableCell>\n                                                <Tooltip title=\"Reject Candidate\" aria-label=\"apply\">\n                                                    <button\n                                                        className=\"btn btn-secondary btn-sm waves-effect waves-light hoverable blue accent-3\" \n                                                        >\n                                                        Accepted\n                                                    </button> \n                                                </Tooltip>                                            \n                                            </TableCell>\n\n                                            :\n\n                                            <TableCell>\n                                                <Tooltip title=\"Rate this job\" aria-label=\"apply\">\n                                                    <button\n                                                        className=\"btn btn-danger btn-sm waves-effect waves-light hoverable blue accent-3\" \n                                                        onClick={() => this.reject(application)}>\n                                                        Reject\n                                                    </button> \n                                                </Tooltip>                                            \n                                            </TableCell>\n\n                                            }\n                                            \n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        {/* </Paper>                */}\n                    </Grid>    \n                </Grid>            \n            </div>\n        }\n        return (\n            <div style={{ height: \"75vh\" }} className=\"valign-wrapper\">\n                <div className=\"row\">\n                    <div className=\"col s12 center-align\">\n                        <Card style={{ width: '100%' }}>\n                            <Card.Body>\n                                {Applications}\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAppList.propTypes = {\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\nexport default connect(\n    mapStateToProps,\n)(AppList);","C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\actions\\types.js",[],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\reducers\\index.js",[],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\reducers\\authReducer.js",["146"],[],"import {\n    SET_CURRENT_USER,\n    USER_LOADING\n} from \"../actions/types\";\n\nconst isEmpty = require(\"is-empty\");\n\nconst initialState = {\n    isAuthenticated: false,\n    user: {},\n    loading: false\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case SET_CURRENT_USER:\n        return {\n            ...state,\n            isAuthenticated: !isEmpty(action.payload),\n            user: action.payload\n        };\n        case USER_LOADING:\n        return {\n            ...state,\n            loading: true\n        };\n        default:\n        return state;\n    }\n}","C:\\Users\\Admin\\OneDrive\\Desktop\\Pr\\JobsPlanet-MERN-App\\frontend\\src\\reducers\\errorReducer.js",["147"],[],"import { GET_ERRORS } from \"../actions/types\";\nconst initialState = {};\nexport default function(state = initialState, action) {\n    switch (action.type) {\n    case GET_ERRORS:\n        return action.payload;\n    default:\n        return state;\n    }\n}",{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":46,"column":13,"nodeType":"152","messageId":"153","endLine":46,"endColumn":23},{"ruleId":"150","severity":1,"message":"151","line":53,"column":9,"nodeType":"152","messageId":"153","endLine":53,"endColumn":31},{"ruleId":"150","severity":1,"message":"151","line":106,"column":13,"nodeType":"152","messageId":"153","endLine":106,"endColumn":50},{"ruleId":"150","severity":1,"message":"151","line":108,"column":13,"nodeType":"152","messageId":"153","endLine":108,"endColumn":50},{"ruleId":"150","severity":1,"message":"151","line":109,"column":9,"nodeType":"152","messageId":"153","endLine":109,"endColumn":46},{"ruleId":"150","severity":1,"message":"151","line":115,"column":13,"nodeType":"152","messageId":"153","endLine":115,"endColumn":50},{"ruleId":"154","severity":1,"message":"155","line":310,"column":13,"nodeType":"156","messageId":"157","endLine":310,"endColumn":20},{"ruleId":"158","severity":1,"message":"159","line":14,"column":1,"nodeType":"160","endLine":30,"endColumn":2},{"ruleId":"158","severity":1,"message":"159","line":3,"column":1,"nodeType":"160","endLine":10,"endColumn":2},"no-new-object",["161"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","no-unused-vars","'alljobs' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-object-constructor"]